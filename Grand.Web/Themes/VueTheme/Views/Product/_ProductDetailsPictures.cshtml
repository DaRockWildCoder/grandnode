@model ProductDetailsModel
@using Grand.Framework.Themes
@using Grand.Framework.UI
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject IPageHeadBuilder pagebuilder

@{
    var themeName = themeContext.WorkingThemeName;
    pagebuilder.AppendScriptParts(ResourceLocation.Head, string.Format("~/Themes/{0}/Content/script/vue-gallery-slideshow.min.js", themeName));
}
<b-col xl="6" lg="6" md="5" cols="12" class="mt-md-0 mt-3 px-0">
    <div class="gallery">
        @if (Model.PictureModels.Count == 1)
        {
            @if (Model.DefaultPictureZoomEnabled)
            {
                <template>
                    <img class="image main-image zoom" id="main-product-img-@Model.Id" v-for="(image, i) in images" :src="image.url" :alt="image.alt" :title="image.title" :key="i" @@click="index = i">
                    <vue-gallery-slideshow :images="images" :index="index" @@close="index = null"></vue-gallery-slideshow>
                </template>
                <script>
                    Vue.mixin({
                    data: function () {
                        return {
                            images: [
                            @foreach (var picture in Model.PictureModels)
                            {
                                if (Model.PictureModels.First() == picture)
                                {
                                    <text>
                                        { url: '@picture.FullSizeImageUrl', fullimg: '@picture.FullSizeImageUrl', alt:'@picture.AlternateText', title: '@picture.Title' },
                                    </text>
                                }
                                else
                                {
                                    <text>
                                { url: '@picture.ImageUrl', fullimg: '@picture.FullSizeImageUrl', alt:'@picture.AlternateText', title: '@picture.Title' },
                                    </text>
                                }

                            }
                        ],
                        index: null
                        }
                    },
                    components: {
                        VueGallerySlideshow
                    },
                })
                </script>
            }
            else
            {
                <img id="main-product-img-@Model.Id" class="image main-image"
                     src="@Model.DefaultPictureModel.ImageUrl"
                     alt="@Model.DefaultPictureModel.AlternateText"
                     title="@Model.DefaultPictureModel.Title" />
            }
        }
        @if (Model.PictureModels.Count == 0)
        {
            <img id="main-product-img-@Model.Id" class="image main-image"
                 src="@Model.DefaultPictureModel.ImageUrl"
                 alt="@Model.DefaultPictureModel.AlternateText"
                 title="@Model.DefaultPictureModel.Title" />
        }
        @if (Model.DefaultPictureZoomEnabled)
        {
            @if (Model.PictureModels.Count > 1)
            {
                <img id="main-product-img-@Model.Id" class="image main-image zoom"
                     src="@Model.DefaultPictureModel.ImageUrl"
                     alt="@Model.DefaultPictureModel.AlternateText"
                     title="@Model.DefaultPictureModel.Title"
                     onclick="document.querySelector('.thumb-image').click()" />
                <template>
                    <img class="image thumb-image zoom" v-for="(image, i) in images" :src="image.url" :datasrc="image.fullimg" :alt="image.alt" :title="image.title" :key="i" @@click="index = i">
                    <vue-gallery-slideshow :images="images" :index="index" @@close="index = null"></vue-gallery-slideshow>
                </template>
                <!-- Start running your app -->
    <script>
                Vue.mixin({
                    data: function () {
                        return {
                            images: [
                            @foreach (var picture in Model.PictureModels)
                            {
                                if (Model.PictureModels.First() == picture)
                                {
                                    <text>
                                        { url: '@picture.FullSizeImageUrl', fullimg: '@picture.FullSizeImageUrl', alt:'@picture.AlternateText', title: '@picture.Title' },
                                    </text>
                                }
                                else
                                {
                                    <text>
                                { url: '@picture.ImageUrl', fullimg: '@picture.FullSizeImageUrl', alt:'@picture.AlternateText', title: '@picture.Title' },
                                    </text>
                                }

                            }
                        ],
                        index: null
                        }
                    },
                    components: {
                        VueGallerySlideshow
                    },
                })
    </script>
            }
        }
        else
        {
            @if (Model.PictureModels.Count > 1)
            {
                <img id="main-product-img-@Model.Id" class="image main-image"
                     src="@Model.DefaultPictureModel.ImageUrl"
                     alt="@Model.DefaultPictureModel.AlternateText"
                     title="@Model.DefaultPictureModel.Title" />
                @foreach (var picture in Model.PictureModels)
                {
                    <img class="image thumb-image"
                         src="@picture.ThumbImageUrl"
                         alt="@picture.AlternateText"
                         title="@picture.Title"
                         data-src="@picture.ImageUrl"
                         @@click="changeImg($event)"/>
                }
                <script>
                    Vue.mixin({
                        data: function () {
                        },
                        methods: {
                            changeImg(event) {
                                var img = event.srcElement.getAttribute('data-src');
                                var mainImg = document.getElementById('main-product-img-@Model.Id');
                                mainImg.setAttribute('src', img);
                            }
                        }
                    })
                </script>
            }
        }
    </div>
</b-col>